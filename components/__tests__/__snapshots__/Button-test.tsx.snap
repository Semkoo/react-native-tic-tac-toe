// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders correctly 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#dafaf7",
      "borderRadius": 30,
      "opacity": 1,
      "paddingHorizontal": 35,
      "paddingVertical": 20,
    }
  }
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceMono",
        },
        {
          "color": "#221a36",
          "fontSize": 18,
          "textAlign": "center",
        },
      ]
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders correctly with onPress 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": undefined,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={true}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#dafaf7",
      "borderRadius": 30,
      "opacity": 1,
      "paddingHorizontal": 35,
      "paddingVertical": 20,
    }
  }
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceMono",
        },
        {
          "color": "#221a36",
          "fontSize": 18,
          "textAlign": "center",
        },
      ]
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders correctly with onPress and disabled 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#dafaf7",
      "borderRadius": 30,
      "opacity": 1,
      "paddingHorizontal": 35,
      "paddingVertical": 20,
    }
  }
>
  <Text
    style={
      [
        {
          "fontFamily": "SpaceMono",
        },
        {
          "color": "#221a36",
          "fontSize": 18,
          "textAlign": "center",
        },
      ]
    }
  >
    Test
  </Text>
</View>
`;

exports[`renders correctly with onPress and disabled and loading 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#dafaf7",
      "borderRadius": 30,
      "opacity": 1,
      "paddingHorizontal": 35,
      "paddingVertical": 20,
    }
  }
>
  <ActivityIndicator
    color="#000"
  />
</View>
`;

exports[`renders correctly with onPress and loading 1`] = `
<View
  accessibilityState={
    {
      "busy": undefined,
      "checked": undefined,
      "disabled": true,
      "expanded": undefined,
      "selected": undefined,
    }
  }
  accessibilityValue={
    {
      "max": undefined,
      "min": undefined,
      "now": undefined,
      "text": undefined,
    }
  }
  accessible={true}
  collapsable={false}
  focusable={false}
  onClick={[Function]}
  onResponderGrant={[Function]}
  onResponderMove={[Function]}
  onResponderRelease={[Function]}
  onResponderTerminate={[Function]}
  onResponderTerminationRequest={[Function]}
  onStartShouldSetResponder={[Function]}
  style={
    {
      "backgroundColor": "#dafaf7",
      "borderRadius": 30,
      "opacity": 1,
      "paddingHorizontal": 35,
      "paddingVertical": 20,
    }
  }
>
  <ActivityIndicator
    color="#000"
  />
</View>
`;
